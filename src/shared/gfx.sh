#!/bin/bash

# This file converts gfx.inc.in into a pascal file gfx.inc

# set current dir

cd $(dirname "$0")

# input/output files

input="gfx.hpp.in"
output="gfx.hpp"

# remove empty lines
# remove lines starting with # (comments)
# add line numbers as the first column
# and save into $data

data="$(cat "$input" | sed -E '/^(#.*)?$/d' | nl)"

# define regular expression to divide a line into groups
#
#     whitespace       id after group                     file name
#         |                   |                               |
#   (1)  ( )  (GFX_GOSTEK)(_STOPA)   (FF00FF00)    ('gostek-gfx\stopa.bmp')
#    |              |                     |
# line number     group               color key

re='^\s*(\S+)(\s+)GFX_([^_]+)(\S*)\s+(\S+)\s+'"'"'(.*)'"'"'$'

(
  # file preamble
  echo "#pragma once"
  echo "// Note: this file is automatically generated, any changes will be lost."
  echo "// Modify $input instead."
  echo '#include <cstdint>'
  echo '#include <string_view>'
  echo '#include <array>'
  echo ''

  # start constants section

  echo 'namespace GFX'
  echo '{'

  # GFX_ constants & GFXID_END

  echo "$data" | sed -E "s/$re/  constexpr std::int32_t \\3\\4 = \\1;/g"
  echo "  constexpr std::int32_t END = $(echo "$data" | wc -l);";
  echo '};'

  # make a list of unique groups and prepend a column with numbers

  echo ''
  echo 'namespace GFXG'
  echo '{'

  groups="$(echo "$data" | sed -E "s/$re/ constexpr std::int32_t \\3/g" | sort -u | nl)"

  # output GFXG_ constants with group ids

  echo "$groups" | sed -E 's/^\s*(\S+)\s+(.+)$/  \2 = \1;/g'

  # end of constants section

  echo '};'
  echo ''

  # data section, used by the texture loading

  replacement='GfxDataEntry{GFX::\3\4, GFXG::\3, "\6", 0x\5},'
  echo 'struct GfxDataEntry {std::int32_t ID; std::int32_t Group; std::string_view Path; std::uint32_t ColorKey; };'
  echo "constexpr std::array<GfxDataEntry, $(echo "$data" | wc -l)> GFXData = {"
  echo "$data" | sed -E "s/$re/  $replacement/g" | sed '$s/,$//'
  echo '};'
) > "$output"
